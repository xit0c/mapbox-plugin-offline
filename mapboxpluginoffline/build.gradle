apply plugin: 'com.android.library'
apply plugin: 'kotlin-android'
apply plugin: 'kotlin-android-extensions'
apply plugin: 'org.jetbrains.dokka'
apply plugin: 'maven-publish'
apply plugin: 'com.jfrog.bintray'

String libName = 'mapbox-plugin-offline'
String libDescription = 'An alternative to Mapbox offline plugin, written in Kotlin.'
String libGithubRepo = 'xit0c/mapbox-plugin-offline'
String libUrl = "https://github.com/$libGithubRepo"

android {
    compileSdkVersion 30
    defaultConfig {
        minSdkVersion 14
        targetSdkVersion 30
        versionCode 1
        versionName '2.2.3'
        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
        archivesBaseName = "$archivesBaseName-$versionName"
    }
    dokka {
        outputFormat = 'gfm'
        outputDirectory = "$buildDir/javadoc"
        configuration {
            sourceLink {
                path = "./"
                url = "https://github.com/xit0c/mapbox-plugin-offline/tree/master/mapboxpluginoffline/"
                lineSuffix = "#L" // suffix used to append the line number to the URL (#L for GitHub)
            }
            externalDocumentationLink {
                url = new URL("https://developer.android.com/reference/")
                packageListUrl = new URL("https://developer.android.com/reference/androidx/package-list")
            }
        }
    }
    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
    }
}

dependencies {
    implementation fileTree(dir: 'libs', include: ['*.jar'])

    // Kotlin
    implementation "org.jetbrains.kotlin:kotlin-stdlib:$kotlin_version"

    // AndroidX
    implementation "androidx.core:core-ktx:$androidx_core_version"

    // Mapbox
    implementation "com.mapbox.mapboxsdk:mapbox-android-sdk:$mapbox_version"

    // Testing libraries
    testImplementation "junit:junit:$junit_version"
    androidTestImplementation "androidx.test:runner:$androidx_test_runner_version"
    androidTestImplementation "androidx.test.espresso:espresso-core:$androidx_test_espresso_version"
    androidTestImplementation "androidx.test.ext:junit:$androidx_test_junit_version"
}

afterEvaluate {
    publishing {
        publications {
            release(MavenPublication) {
                from components.release

                groupId = 'dev.micheleferretti'
                artifactId = 'mapbox-plugin-offline'
                version = android.defaultConfig.versionName

                artifact androidJavadocsJar
                artifact androidSourcesJar

                pom {
                    name = libName
                    description = libDescription
                    url = libUrl
                    licenses {
                        license {
                            name = 'MIT'
                            url = 'https://spdx.org/licenses/MIT.html'
                        }
                    }
                    scm {
                        connection = "scm:git:${libUrl}.git"
                        developerConnection = "scm:git:${libUrl}.git"
                        url = libUrl
                    }
                }
            }
        }
    }
}

bintray {
    user = bintray_user
    key = bintray_key
    publications = ['release']
    dryRun = false
    publish = true
    override = false
    pkg {
        repo = 'mapbox-plugin-offline'
        name = libName
        desc = libDescription
        websiteUrl = libUrl
        issueTrackerUrl = "$libUrl/issues"
        vcsUrl = "${libUrl}.git"
        licenses = ['MIT']
        githubRepo = libGithubRepo
        githubReleaseNotesFile = 'README.md'
        version {
            name = android.defaultConfig.versionName
            released = new Date()
            vcsTag = android.defaultConfig.versionName
        }
    }
}

task androidJavadocsJar(type: Jar, dependsOn: dokka) {
    archiveClassifier.set('javadoc')
    from dokka.outputDirectory
}

task androidSourcesJar(type: Jar) {
    archiveClassifier.set('sources')
    from android.sourceSets.main.java.srcDirs
}

task syncDocs(type: Sync, dependsOn: dokka, group: 'Documentation') {
    description "Sync docs from build javadoc dir to project docs dir"
    from "$dokka.outputDirectory/$project.name"
    into "$rootDir/docs"
}