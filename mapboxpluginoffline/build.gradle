plugins {
    id 'com.android.library'
    id 'kotlin-android'
    id 'kotlin-parcelize'
    id 'org.jetbrains.dokka'
    id 'maven-publish'
    id 'signing'
}

String libName = 'mapbox-plugin-offline'
String libDescription = 'An alternative to Mapbox offline plugin, written in Kotlin.'
String libUrl = "https://github.com/xit0c/$libName"

android {
    compileSdkVersion 30
    defaultConfig {
        minSdkVersion 14
        targetSdkVersion 30
        versionCode 1
        versionName '2.2.4'
        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
        archivesBaseName = "$archivesBaseName-$versionName"
    }
    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
    }
}

dependencies {
    implementation fileTree(dir: 'libs', include: ['*.jar'])

    // Kotlin
    implementation "org.jetbrains.kotlin:kotlin-stdlib:$kotlin_version"

    // AndroidX
    implementation "androidx.core:core-ktx:$androidx_core_version"

    // Mapbox
    implementation "com.mapbox.mapboxsdk:mapbox-android-sdk:$mapbox_version"

    // Testing libraries
    testImplementation "junit:junit:$junit_version"
    androidTestImplementation "androidx.test:runner:$androidx_test_runner_version"
    androidTestImplementation "androidx.test.espresso:espresso-core:$androidx_test_espresso_version"
    androidTestImplementation "androidx.test.ext:junit:$androidx_test_junit_version"
}

dokkaGfm {
    outputDirectory.set(file("$buildDir/javadoc"))
    suppressInheritedMembers.set(true)
    dokkaSourceSets {
        configureEach {
            sourceLink {
                localDirectory.set(file("./"))
                remoteUrl.set(new URL("$libUrl/tree/master/mapboxpluginoffline"))
                remoteLineSuffix.set("#L") // suffix used to append the line number to the URL (#L for GitHub)
            }
        }
    }
}

task androidJavadocsJar(type: Jar, dependsOn: dokkaGfm) {
    archiveClassifier.set('javadoc')
    from dokkaGfm.outputDirectory
}

task androidSourcesJar(type: Jar) {
    archiveClassifier.set('sources')
    from android.sourceSets.main.java.srcDirs
}

task syncDocs(type: Sync, dependsOn: dokkaGfm, group: 'Documentation') {
    description "Sync docs from build javadoc dir to project docs dir"
    from dokkaGfm.outputDirectory
    into "$rootDir/docs"
}

afterEvaluate {
    publishing {
        publications {
            release(MavenPublication) {
                from components.release

                groupId = 'io.github.xit0c'
                artifactId = libName
                version = android.defaultConfig.versionName

                artifact androidJavadocsJar
                artifact androidSourcesJar

                pom {
                    name = libName
                    description = libDescription
                    url = libUrl

                    scm {
                        connection = "scm:git:${libUrl}.git"
                        developerConnection = "scm:git:${libUrl}.git"
                        url = libUrl
                    }

                    licenses {
                        license {
                            name = 'MIT'
                            url = 'https://spdx.org/licenses/MIT.html'
                        }
                    }

                    developers {
                        developer {
                            id = 'xit0c'
                            name = 'Michele Ferretti'
                            email = 'michele.ferretti.93@gmail.com'
                        }
                    }
                }
            }
        }

        repositories {
            maven {
                url 'https://s01.oss.sonatype.org/service/local/staging/deploy/maven2/'
                authentication {
                    basic(BasicAuthentication)
                }
                credentials {
                    username = ossrhUsername
                    password = ossrhPassword
                }
            }
        }
    }
}

signing {
    sign publishing.publications
}